/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.5
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.uscxml;

public class Interpreter {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected Interpreter(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Interpreter obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        uscxmlNativeJavaJNI.delete_Interpreter(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public Interpreter(SWIGTYPE_p_std__string url) {
    this(uscxmlNativeJavaJNI.new_Interpreter(SWIGTYPE_p_std__string.getCPtr(url)), true);
  }

  public void start() {
    uscxmlNativeJavaJNI.Interpreter_start(swigCPtr, this);
  }

  public void stop() {
    uscxmlNativeJavaJNI.Interpreter_stop(swigCPtr, this);
  }

  public static void run(SWIGTYPE_p_void arg0) {
    uscxmlNativeJavaJNI.Interpreter_run(SWIGTYPE_p_void.getCPtr(arg0));
  }

  public void interpret() {
    uscxmlNativeJavaJNI.Interpreter_interpret(swigCPtr, this);
  }

  public boolean validate() {
    return uscxmlNativeJavaJNI.Interpreter_validate(swigCPtr, this);
  }

  public void waitForStabilization() {
    uscxmlNativeJavaJNI.Interpreter_waitForStabilization(swigCPtr, this);
  }

  public void receive(Event event) {
    uscxmlNativeJavaJNI.Interpreter_receive(swigCPtr, this, Event.getCPtr(event), event);
  }

  public void receiveInternal(Event event) {
    uscxmlNativeJavaJNI.Interpreter_receiveInternal(swigCPtr, this, Event.getCPtr(event), event);
  }

  public SWIGTYPE_p_Arabica__XPath__NodeSetT_std__string_t getConfiguration() {
    return new SWIGTYPE_p_Arabica__XPath__NodeSetT_std__string_t(uscxmlNativeJavaJNI.Interpreter_getConfiguration(swigCPtr, this), true);
  }

  public SWIGTYPE_p_Arabica__DOM__NodeT_std__string_t getState(SWIGTYPE_p_std__string stateId) {
    return new SWIGTYPE_p_Arabica__DOM__NodeT_std__string_t(uscxmlNativeJavaJNI.Interpreter_getState(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(stateId)), true);
  }

  public SWIGTYPE_p_std__string getName() {
    return new SWIGTYPE_p_std__string(uscxmlNativeJavaJNI.Interpreter_getName(swigCPtr, this), false);
  }

  public SWIGTYPE_p_std__string getSessionId() {
    return new SWIGTYPE_p_std__string(uscxmlNativeJavaJNI.Interpreter_getSessionId(swigCPtr, this), false);
  }

  public static boolean isMember(SWIGTYPE_p_Arabica__DOM__NodeT_std__string_t node, SWIGTYPE_p_Arabica__XPath__NodeSetT_std__string_t set) {
    return uscxmlNativeJavaJNI.Interpreter_isMember(SWIGTYPE_p_Arabica__DOM__NodeT_std__string_t.getCPtr(node), SWIGTYPE_p_Arabica__XPath__NodeSetT_std__string_t.getCPtr(set));
  }

  public void dump() {
    uscxmlNativeJavaJNI.Interpreter_dump__SWIG_0(swigCPtr, this);
  }

  public static void dump(SWIGTYPE_p_Arabica__DOM__NodeT_std__string_t node, int lvl) {
    uscxmlNativeJavaJNI.Interpreter_dump__SWIG_1(SWIGTYPE_p_Arabica__DOM__NodeT_std__string_t.getCPtr(node), lvl);
  }

  public static void dump(SWIGTYPE_p_Arabica__DOM__NodeT_std__string_t node) {
    uscxmlNativeJavaJNI.Interpreter_dump__SWIG_2(SWIGTYPE_p_Arabica__DOM__NodeT_std__string_t.getCPtr(node));
  }

  public final static class Binding {
    public final static Interpreter.Binding EARLY = new Interpreter.Binding("EARLY", 0);
    public final static Interpreter.Binding LATE = new Interpreter.Binding("LATE", 1);

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static Binding swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + Binding.class + " with value " + swigValue);
    }

    private Binding(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private Binding(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private Binding(String swigName, Binding swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static Binding[] swigValues = { EARLY, LATE };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

}
