/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.5
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.uscxml;

public class Data {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected Data(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Data obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        uscxmlNativeJavaJNI.delete_Data(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public Data() {
    this(uscxmlNativeJavaJNI.new_Data__SWIG_0(), true);
  }

  public Data(SWIGTYPE_p_std__string atom_, Data.Type type_) {
    this(uscxmlNativeJavaJNI.new_Data__SWIG_1(SWIGTYPE_p_std__string.getCPtr(atom_), type_.swigValue()), true);
  }

  public Data(SWIGTYPE_p_std__string atom_) {
    this(uscxmlNativeJavaJNI.new_Data__SWIG_2(SWIGTYPE_p_std__string.getCPtr(atom_)), true);
  }

  public static Data fromXML(SWIGTYPE_p_std__string xmlString) {
    return new Data(uscxmlNativeJavaJNI.Data_fromXML(SWIGTYPE_p_std__string.getCPtr(xmlString)), true);
  }

  public SWIGTYPE_p_Arabica__DOM__DocumentT_std__string_t toDocument() {
    return new SWIGTYPE_p_Arabica__DOM__DocumentT_std__string_t(uscxmlNativeJavaJNI.Data_toDocument(swigCPtr, this), true);
  }

  public SWIGTYPE_p_std__string toXMLString() {
    return new SWIGTYPE_p_std__string(uscxmlNativeJavaJNI.Data_toXMLString(swigCPtr, this), true);
  }

  public void setCompound(SWIGTYPE_p_std__mapT_std__string_uscxml__Data_t value) {
    uscxmlNativeJavaJNI.Data_compound_set(swigCPtr, this, SWIGTYPE_p_std__mapT_std__string_uscxml__Data_t.getCPtr(value));
  }

  public SWIGTYPE_p_std__mapT_std__string_uscxml__Data_t getCompound() {
    long cPtr = uscxmlNativeJavaJNI.Data_compound_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_std__mapT_std__string_uscxml__Data_t(cPtr, false);
  }

  public void setArray(SWIGTYPE_p_std__vectorT_uscxml__Data_t value) {
    uscxmlNativeJavaJNI.Data_array_set(swigCPtr, this, SWIGTYPE_p_std__vectorT_uscxml__Data_t.getCPtr(value));
  }

  public SWIGTYPE_p_std__vectorT_uscxml__Data_t getArray() {
    long cPtr = uscxmlNativeJavaJNI.Data_array_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_std__vectorT_uscxml__Data_t(cPtr, false);
  }

  public void setAtom(SWIGTYPE_p_std__string value) {
    uscxmlNativeJavaJNI.Data_atom_set(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(value));
  }

  public SWIGTYPE_p_std__string getAtom() {
    return new SWIGTYPE_p_std__string(uscxmlNativeJavaJNI.Data_atom_get(swigCPtr, this), true);
  }

  public void setType(Data.Type value) {
    uscxmlNativeJavaJNI.Data_type_set(swigCPtr, this, value.swigValue());
  }

  public Data.Type getType() {
    return Data.Type.swigToEnum(uscxmlNativeJavaJNI.Data_type_get(swigCPtr, this));
  }

  public final static class Type {
    public final static Data.Type VERBATIM = new Data.Type("VERBATIM");
    public final static Data.Type INTERPRETED = new Data.Type("INTERPRETED");

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static Type swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + Type.class + " with value " + swigValue);
    }

    private Type(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private Type(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private Type(String swigName, Type swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static Type[] swigValues = { VERBATIM, INTERPRETED };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

}
