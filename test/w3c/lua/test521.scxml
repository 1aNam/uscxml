<?xml version="1.0" standalone="no"?>
<!-- we test that the processor raises error.communication if it cannot dispatch the event.
(To create an undispatchable event, we choose a non-existent session as target).  If it raises
the error event, we succeed.  Otherwise we eventually timeout and fail.  -->
<scxml xmlns="http://www.w3.org/2005/07/scxml" initial="s0" version="1.0" datamodel="lua">
  <state id="s0">
    <onentry>
      <!-- should cause an error -->
      <send event="event2" target="FIXME"/>
      <!-- this will get added to the external event queue after the error has been raised -->
      <send event="timeout"/>
    </onentry>
    <!-- once we've entered the state, we should check for internal events first -->
    <transition event="error.communication" target="pass"/>
    <transition event="*" target="fail"/>
  </state>
  <final id="pass"/>
  <final id="fail"/>
</scxml>
