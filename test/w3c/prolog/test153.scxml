<?xml version="1.0" encoding="UTF-8"?>
<!-- test that foreach goes over the array in the right order.  since the array contains 1 2 3, we compare the current 
value with the previous value, which is stored in var1. The current value should always be larger.  If
it ever isn't, set Var4 to 0, indicating failure -->
<scxml xmlns="http://www.w3.org/2005/07/scxml" xmlns:conf="http://www.w3.org/2005/scxml-conformance" initial="s0" version="1.0" datamodel="prolog">
  <datamodel>
    <data id="var1" expr="0"/>
    <!-- contains the previous value -->
    <data id="var2"/>
    <!-- the item which will contain the current value -->
    <data id="var3">
    [1,2,3]
    </data>
    <data id="var4" expr="1"/>
    <!-- 1 if success, 0 if failure -->
  </datamodel>
  <state id="s0">
    <onentry>
      <foreach item="var2" array="var3(X), member(M, X)">
        <if cond="var1&lt;var2">
          <assign location="var1" expr="var2"/>
          <else/>
          <!-- values are out of order, record failure -->
          <assign location="var4" expr="0"/>
        </if>
      </foreach>
    </onentry>
    <!-- check that var1 has its original value  -->
    <transition cond="X = 0, var4(X)" target="fail"/>
    <transition target="pass"/>
  </state>
  <final id="pass">
    <onentry>
      <log label="Outcome" expr="'pass'"/>
    </onentry>
  </final>
  <final id="fail">
    <onentry>
      <log label="Outcome" expr="'fail'"/>
    </onentry>
  </final>
</scxml>
